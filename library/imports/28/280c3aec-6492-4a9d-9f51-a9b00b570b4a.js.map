{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BaseFrame",
    "require",
    "cc",
    "Class",
    "extends",
    "properties",
    "label",
    "default",
    "type",
    "Label",
    "text",
    "onLoad",
    "jsbTest",
    "testlog",
    "self",
    "socket",
    "ClientSocket",
    "createSocket",
    "pData",
    "onSocketCallBack",
    "ConnectSocket",
    "string",
    "update",
    "dt",
    "undefined",
    "main",
    "getmain",
    "sub",
    "getsub",
    "console",
    "log",
    "onConnectCompeleted",
    "onSocketError",
    "onSocketEvent",
    "sendLogon",
    "logonData",
    "CCmd_Data",
    "create",
    "setcmdinfo",
    "pushdword",
    "pushstring",
    "pushbyte",
    "sendSocketData"
  ],
  "mappings": ";;AAAA,IAAIA,YAAYC,QAAQ,WAAR,CAAhB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASJ,SADJ;;AAGLK,gBAAY;AACRC,eAAO;AACHC,qBAAS,IADN;AAEHC,kBAAMN,GAAGO;AAFN,SADC;AAKR;AACAC,cAAM;AANE,KAHP;;AAYL;AACAC,YAAQ,kBAAY;AAChBC,gBAAQC,OAAR;AACA,YAAIC,OAAO,IAAX;AACA,aAAKC,MAAL,GAAcC,aAAaC,YAAb,CAA0B,UAASC,KAAT,EAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACAJ,iBAAKK,gBAAL,CAAsBD,KAAtB;AACH,SARa,CAAd;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAKH,MAAL,CAAYK,aAAZ,CAA0B,gBAA1B,EAA2C,IAA3C;AACA,aAAKd,KAAL,CAAWe,MAAX,GAAoB,KAAKX,IAAzB;AACH,KArCI;AAsCL;AACAY,YAAQ,gBAAUC,EAAV,EAAc,CAErB,CAzCI;AA0CLJ,sBAAkB,0BAASD,KAAT,EAAgB;AAC9B,YAAGA,UAAUM,SAAb,EACA;AACI;AACH;AACD,YAAIC,OAAOP,MAAMQ,OAAN,EAAX;AACA,YAAIC,MAAMT,MAAMU,MAAN,EAAV;AACAC,gBAAQC,GAAR,CAAY,YAAUL,IAAV,GAAe,SAAf,GAAyBE,GAArC;AACA,YAAIF,SAAS,CAAb,EACA;AACI,gBAAGE,QAAQ,CAAX,EACA;AACI,qBAAKI,mBAAL;AACH,aAHD,MAKA;AACI,qBAAKC,aAAL,CAAmBd,KAAnB;AACH;AACJ,SAVD,MAYA;AACI,iBAAKe,aAAL,CAAmBf,KAAnB;AACH;AACJ,KAjEI;AAkELa,yBAAqB,+BAAU;AAC3B,aAAKG,SAAL;AACAL,gBAAQC,GAAR,CAAY,qBAAZ;AACH,KArEI;AAsELE,mBAAc,uBAASd,KAAT,EAAe;AACzBW,gBAAQC,GAAR,CAAY,eAAZ;AACH,KAxEI;AAyELG,mBAAe,uBAASf,KAAT,EAAe;AAC1BW,gBAAQC,GAAR,CAAY,eAAZ;AACH,KA3EI;AA4ELI,eAAW,qBAAU;AACjB,YAAIC,YAAYC,UAAUC,MAAV,EAAhB;AACAF,kBAAUG,UAAV,CAAqB,EAArB,EAAwB,GAAxB;AACAH,kBAAUI,SAAV,CAAoB,CAApB;AACAJ,kBAAUI,SAAV,CAAoB,CAApB;AACAJ,kBAAUI,SAAV,CAAoB,CAApB;AACAJ,kBAAUI,SAAV,CAAoB,CAApB;AACAJ,kBAAUK,UAAV,CAAqB,aAArB,EAAmC,EAAnC;AACAL,kBAAUK,UAAV,CAAqB,kCAArB,EAAwD,EAAxD;AACAL,kBAAUK,UAAV,CAAqB,kCAArB,EAAwD,EAAxD;AACAL,kBAAUM,QAAV,CAAmB,CAAnB;AACAN,kBAAUM,QAAV,CAAmB,CAAnB;AACA,aAAK1B,MAAL,CAAY2B,cAAZ,CAA2BP,SAA3B;AACH;AAzFI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "var BaseFrame = require(\"BaseFrame\")\ncc.Class({\n    extends: BaseFrame,\n\n    properties: {\n        label: {\n            default: null,\n            type: cc.Label\n        },\n        // defaults, set visually when attaching this script to the Canvas\n        text: 'Hello, World!'\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        jsbTest.testlog();\n        var self = this;\n        this.socket = ClientSocket.createSocket(function(pData){\n            // console.log('callback_begin');\n            // var mainID = pData.getmain();\n            // var subID = pData.getsub();\n            // console.log(mainID);\n            // console.log(subID);\n            // console.log('callback_end');\n            self.onSocketCallBack(pData);\n        });\n        // var pData = CCmd_Data.create();\n        // pData.setcmdinfo(2,3);\n        // pData.pushbyte(1);\n        // pData.pushword(23333);\n        // pData.pushdouble(123.3434);\n        // console.log(pData.getmain());\n        // console.log(pData.getsub());\n        // console.log(pData.readbyte());\n        // console.log(pData.readword());\n        // console.log(pData.readdouble());\n        this.socket.ConnectSocket(\"122.226.186.38\",9009);\n        this.label.string = this.text;\n    },\n    // called every frame\n    update: function (dt) {\n\n    },\n    onSocketCallBack: function(pData) {\n        if(pData === undefined)\n        {\n            return;\n        }\n        var main = pData.getmain();\n        var sub = pData.getsub();\n        console.log('main = '+main+' sub = '+sub);\n        if (main === 0) \n        {\n            if(sub === 0)\n            {\n                this.onConnectCompeleted();\n            }\n            else\n            {\n                this.onSocketError(pData);\n            }\n        }\n        else\n        {\n            this.onSocketEvent(pData);\n        }\n    },\n    onConnectCompeleted: function(){\n        this.sendLogon();\n        console.log('onConnectCompeleted');\n    },\n    onSocketError:function(pData){\n        console.log('onSocketError');\n    },\n    onSocketEvent: function(pData){\n        console.log(\"onSocketEvent\");\n    },\n    sendLogon: function(){\n        var logonData = CCmd_Data.create();\n        logonData.setcmdinfo(15,150);\n        logonData.pushdword(1);\n        logonData.pushdword(0);\n        logonData.pushdword(3);\n        logonData.pushdword(1);\n        logonData.pushstring(\"17602170313\",32);\n        logonData.pushstring(\"25d55ad283aa400af464c76d713c07ad\",33);\n        logonData.pushstring(\"2d4d7c95e5df0179af2466f635ca71de\",33);\n        logonData.pushbyte(0);\n        logonData.pushbyte(0);\n        this.socket.sendSocketData(logonData);\n    }\n});\n"
  ]
}