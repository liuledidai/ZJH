{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "require",
    "game_cmd",
    "plaza_cmd",
    "BaseFrame",
    "cc",
    "Class",
    "extends",
    "properties",
    "label",
    "default",
    "type",
    "Label",
    "text",
    "onLoad",
    "onCreateSocket",
    "string",
    "update",
    "dt",
    "onConnectCompeleted",
    "sendLogon",
    "console",
    "log",
    "logonData",
    "CCmd_Data",
    "create",
    "setcmdinfo",
    "MDM_GP_LOGON_MOBILE",
    "SUB_GP_LOGON_MOBILE",
    "pushdword",
    "pushstring",
    "pushbyte",
    "sendSocketData"
  ],
  "mappings": ";;AAAAA,QAAQ,KAAR;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,YAAYF,QAAQ,WAAR,CAAhB;AACA,IAAIG,YAAYH,QAAQ,WAAR,CAAhB;AACAI,GAAGC,KAAH,CAAS;AACLC,aAASH,SADJ;;AAGLI,gBAAY;AACRC,eAAO;AACHC,qBAAS,IADN;AAEHC,kBAAMN,GAAGO;AAFN,SADC;AAKR;AACAC,cAAM;AANE,KAHP;AAWL;AACA;AACAC,YAAQ,kBAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAKC,cAAL,CAAoB,gBAApB,EAAqC,IAArC;AACA,aAAKN,KAAL,CAAWO,MAAX,GAAoB,KAAKH,IAAzB;AACH,KAtCI;AAuCL;AACAI,YAAQ,gBAAUC,EAAV,EAAc,CAErB,CA1CI;AA2CL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,yBAAqB,+BAAU;AAC3B,aAAKC,SAAL;AACAC,gBAAQC,GAAR,CAAY,2BAAZ;AACH,KAtEI;AAuEL;AACA;AACA;AACA;AACA;AACA;AACAF,eAAW,qBAAU;AACjB,YAAIG,YAAYC,UAAUC,MAAV,EAAhB;AACAF,kBAAUG,UAAV,CAAqBvB,UAAUwB,mBAA/B,EAAmDxB,UAAUyB,mBAA7D;AACAL,kBAAUM,SAAV,CAAoB,CAApB;AACAN,kBAAUM,SAAV,CAAoB,CAApB;AACAN,kBAAUM,SAAV,CAAoB,CAApB;AACAN,kBAAUM,SAAV,CAAoB,CAApB;AACAN,kBAAUO,UAAV,CAAqB,aAArB,EAAmC,EAAnC;AACAP,kBAAUO,UAAV,CAAqB,kCAArB,EAAwD,EAAxD;AACAP,kBAAUO,UAAV,CAAqB,kCAArB,EAAwD,EAAxD;AACAP,kBAAUQ,QAAV,CAAmB,CAAnB;AACAR,kBAAUQ,QAAV,CAAmB,CAAnB;AACA,aAAKC,cAAL,CAAoBT,SAApB;AACH;AA1FI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "require(\"MD5\");\nvar game_cmd = require(\"CMD_Game\");\nvar plaza_cmd = require(\"CMD_Plaza\");\nvar BaseFrame = require(\"BaseFrame\");\ncc.Class({\n    extends: BaseFrame,\n\n    properties: {\n        label: {\n            default: null,\n            type: cc.Label\n        },\n        // defaults, set visually when attaching this script to the Canvas\n        text: 'Hello, World!'\n    },\n    // name: \"helloFrame\",\n    // use this for initialization\n    onLoad: function () {\n        // jsbTest.testlog();\n        // var self = this;\n        // this.socket = ClientSocket.createSocket(function(pData){\n        //     // console.log('callback_begin');\n        //     // var mainID = pData.getmain();\n        //     // var subID = pData.getsub();\n        //     // console.log(mainID);\n        //     // console.log(subID);\n        //     // console.log('callback_end');\n        //     self.onSocketCallBack(pData);\n        // });\n        // // var pData = CCmd_Data.create();\n        // // pData.setcmdinfo(2,3);\n        // // pData.pushbyte(1);\n        // // pData.pushword(23333);\n        // // pData.pushdouble(123.3434);\n        // // console.log(pData.getmain());\n        // // console.log(pData.getsub());\n        // // console.log(pData.readbyte());\n        // // console.log(pData.readword());\n        // // console.log(pData.readdouble());\n        // this.socket.ConnectSocket(\"122.226.186.38\",9009);\n        this.onCreateSocket(\"122.226.186.38\",9009);\n        this.label.string = this.text;\n    },\n    // called every frame\n    update: function (dt) {\n\n    },\n    // onSocketCallBack: function(pData) {\n    //     if(pData === undefined)\n    //     {\n    //         return;\n    //     }\n    //     var main = pData.getmain();\n    //     var sub = pData.getsub();\n    //     console.log('main = '+main+' sub = '+sub);\n    //     if (main === 0) \n    //     {\n    //         if(sub === 0)\n    //         {\n    //             this.onConnectCompeleted();\n    //         }\n    //         else\n    //         {\n    //             this.onSocketError(pData);\n    //         }\n    //     }\n    //     else\n    //     {\n    //         this.onSocketEvent(pData);\n    //     }\n    // },\n    onConnectCompeleted: function(){\n        this.sendLogon();\n        console.log('hello_onConnectCompeleted');\n    },\n    // onSocketError:function(pData){\n    //     console.log('onSocketError');\n    // },\n    // onSocketEvent: function(pData){\n    //     console.log(\"onSocketEvent\");\n    // },\n    sendLogon: function(){\n        var logonData = CCmd_Data.create();\n        logonData.setcmdinfo(plaza_cmd.MDM_GP_LOGON_MOBILE,plaza_cmd.SUB_GP_LOGON_MOBILE);\n        logonData.pushdword(1);\n        logonData.pushdword(0);\n        logonData.pushdword(3);\n        logonData.pushdword(1);\n        logonData.pushstring(\"17602170313\",32);\n        logonData.pushstring(\"25d55ad283aa400af464c76d713c07ad\",33);\n        logonData.pushstring(\"2d4d7c95e5df0179af2466f635ca71de\",33);\n        logonData.pushbyte(0);\n        logonData.pushbyte(0);\n        this.sendSocketData(logonData);\n    }\n});\n"
  ]
}