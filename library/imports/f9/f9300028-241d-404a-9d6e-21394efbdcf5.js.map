{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BaseFrame",
    "cc",
    "Class",
    "properties",
    "name",
    "ctor",
    "_threadid",
    "undefined",
    "_socket",
    "_gameFrame",
    "m_tabCacheMsg",
    "setCallBack",
    "callback",
    "_callBack",
    "setViewFrame",
    "viewFrame",
    "_viewFrame",
    "setSocketEvent",
    "socketEvent",
    "_socketEvent",
    "getViewFrame",
    "isSocketServer",
    "onSocketError",
    "pData",
    "onCloseSocket",
    "onCreateSocket",
    "szUrl",
    "nPort",
    "_szServerUrl",
    "_nServerPort",
    "_SocketFun",
    "onSocketCallBack",
    "ClientSocket",
    "createSocket",
    "ConnectSocket",
    "console",
    "log",
    "main",
    "getmain",
    "sub",
    "getsub",
    "onConnectCompeleted",
    "onSocketEvent",
    "releaseSocket",
    "sendSocketData",
    "onGameSocketEvent",
    "module",
    "exports"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var BaseFrame = cc.Class({\n    // extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    // onLoad: function () {\n\n    // },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n    name: \"BaseFrame\",\n    ctor: function(){\n        // this._viewFrame = view;\n        this._threadid = undefined;\n        this._socket = undefined;\n        // this._callBack = callback;\n        \n        this._gameFrame = undefined;\n        this.m_tabCacheMsg = {};\n        \n    },\n    setCallBack: function(callback){\n      this._callBack = callback;  \n    },\n    setViewFrame: function(viewFrame){\n      this._viewFrame = viewFrame;  \n    },\n    setSocketEvent: function(socketEvent){\n        this._socketEvent = socketEvent;\n    },\n    getViewFrame: function(){\n      return this._viewFrame;  \n    },\n    isSocketServer: function(){\n        return this._socket !== undefined && this._threadid !== undefined;\n    },\n    onSocketError: function(pData){\n      if(this._threadid === undefined)\n      {\n          return\n      }\n      \n      this.onCloseSocket();\n      //todo...\n    },\n    onCreateSocket: function(szUrl,nPort){\n        if(this._socket !== undefined)\n        {\n            return false;\n        }\n        this._szServerUrl = szUrl;\n        this._nServerPort = nPort;\n        this._SocketFun = function(pData){\n            this.onSocketCallBack(pData);\n        };\n        this._socket = ClientSocket.createSocket(this._SocketFun);\n        if(this._socket.ConnectSocket(this._szServerUrl,this._nServerPort) === true)\n        {\n            this._threadid = 0;\n            return true;\n        }\n        else\n        {\n            this.onCloseSocket();\n            return false;\n        }\n    },\n    onSocketCallBack: function(pData){\n        if(pData === undefined)\n        {\n            return;\n        }\n        if(this._callBack === undefined)\n        {\n            console.log('no callback');\n            this.onCloseSocket();\n            return;\n        }\n        var main = pData.getmain();\n        var sub = pData.getsub();\n        console.log(\"onSocketCallBack main: \" + main + \" #sub: \"+sub);\n        if(main === 0) \n        {\n            if(sub === 0) \n            {\n                this._threadid = 1;\n                this.onConnectCompeleted();\n            }\n            else\n            {\n                this.onSocketError(pData);\n                this.onCloseSocket();\n            }\n        }\n        else\n        {\n            this.onSocketEvent(main, sub, pData);\n        }\n    },\n    onCloseSocket: function(){\n        if(this._socket !== undefined)\n        {\n            this._socket.releaseSocket();\n            this._socket = undefined;\n        }\n        if(this._threadid !== undefined)\n        {\n            this._threadid = undefined;\n        }\n        this._SocketFun = undefined;\n    },\n    sendSocketData: function(pData){\n        if (this._socket === undefined)\n        {\n            return false;\n        }\n        this._socket.sendSocketData(pData);\n    },\n    onConnectCompeleted: function(){\n        console.log(\"BaseFrame_onConnectCompeleted\");\n    },\n    onSocketEvent: function(main,sub,pData){\n        console.log(\"BaseFrame_onSocketEvent_\"+main+\"-\"+sub);\n    },\n    onGameSocketEvent: function(main,sub,pData){\n        console.log(\"BaseFrame_onGameSocketEvent_\"+main+\"-\"+sub);\n    },\n    \n});\n\nmodule.exports = BaseFrame;"
  ]
}